--Parte 4. Construye las siguientes consultas:

--4.1. Aquellas usadas para insertar, modificar y eliminar un Customer, Staff y Actor.

INSERT INTO customer(customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active) 
VALUES ( 600, 1, 'Jorge', 'Castillo Mora', 'j.castillo@gmail.com', 1, true, CURRENT_DATE, NOW(), 1);

INSERT INTO staff(staff_id, first_name, last_name, address_id, email, store_id, active, username, password, last_update, picture) 
VALUES ( 3, 'Pablo', 'Castillo Mora', 5, 'p.castillo@gmail.com', 2, true, 'Pablo', 'pablo123', NOW(), null);

INSERT INTO actor(actor_id, first_name, last_name, last_update) 
VALUES ( 201, 'George', 'Castle', NOW());

UPDATE customer
SET email = 'newmail@newemail.com'
WHERE customer_id = 1;

UPDATE staff
SET password = '8cb2237d0679ca88db6464eac60da963455139pp'
WHERE staff_id = 3;

UPDATE actor
SET first_name = 'Ragnar'
WHERE actor_id = 1;

BEGIN;
DELETE FROM customer
WHERE customer_id = 600;

DELETE FROM staff
WHERE staff_id = 3;

DELETE FROM actor
WHERE actor_id = 201;
COMMIT;

--4.2. Listar todas las “rental” con los datos del “customer” dado un año y mes.

SELECT r.rental_id, r.rental_date, c.first_name, c.last_name
FROM rental r
JOIN customer c ON r.customer_id = c.customer_id
WHERE to_char (rental_date, 'YYYY-MM')='2005-08';

--4.3. Listar Número, Fecha (payment_date) y Total (amount) de todas las “payment”.

SELECT payment_id AS número, payment_date AS fecha, amount AS total
FROM payment;

--4.4. Listar todas las “film” del año 2006 que contengan un (rental_rate) mayor a 4.0.

SELECT * FROM film
WHERE release_year = 2006
AND rental_rate > 4.0;


--Parte 5. Diccionario de datos.

SELECT
	t1.TABLE_NAME AS tabla_nombre,
	t1.COLUMN_NAME AS columna_nombre,
	t1.COLUMN_DEFAULT AS columna_defecto,
	t1.IS_NULLABLE AS columna_nulo,
	t1.DATA_TYPE AS columna_tipo_dato,
	COALESCE(t1.NUMERIC_PRECISION,
	t1.CHARACTER_MAXIMUM_LENGTH) AS columna_longitud,
	PG_CATALOG.COL_DESCRIPTION(t2.OID,
	t1.DTD_IDENTIFIER::int) AS columna_descripcion,
	t1.DOMAIN_NAME AS columna_dominio
FROM
	INFORMATION_SCHEMA.COLUMNS t1
	INNER JOIN PG_CLASS t2 ON (t2.RELNAME = t1.TABLE_NAME)
WHERE
	t1.TABLE_SCHEMA = 'public'
ORDER BY
	t1.TABLE_NAME;